NeuroTrack: An EEG-Based Stress and Depression Analyzer

Welcome to the official repository for the NeuroTrack project, a B.Tech Final Year Project for the Department of Electronics & Communication Engineering at CSJM University.

📖 Table of Contents
About the Project

Team Members

Technology Stack

Getting Started: Wokwi Simulation

Project Structure

Project Timeline

Contributing

🎯 About the Project
NeuroTrack aims to develop a low-cost, non-invasive system for the real-time monitoring of mental health indicators such as anxiety, depression, and stress (ADS). The system will acquire and analyze EEG (brainwave) signals to provide objective, quantitative data, moving beyond traditional subjective assessment methods.

The core of our analysis is based on the Alpha-to-Beta brainwave ratio, a scientifically recognized indicator of a person's cognitive and emotional state.

👥 Team Members
Ashutosh Sharan Srivastava

Aditya Gupta

Sai Ujwal Ramula

Abhay Pratap Singh

Shefali Yadav

🛠️ Technology Stack
Component

Technology

Hardware

Raspberry Pi Pico

Sensor (Final)

BioAmp EXG Pill

Sensor (Sim)

Potentiometer for the wowki simulation

Firmware

C/C++ (using the Raspberry Pi Pico SDK)

Desktop App

Python 3.x with PyQt6 & PyQtGraph

Simulation

Wokwi Online Simulator

🚀 Getting Started: Wokwi Simulation
This section covers how to run the current simulation, which uses an MPU6050 to generate a dynamic waveform to test our data pipeline.

Prerequisites
Python: Ensure you have Python 3.8+ installed.

Required Libraries: Install the necessary Python packages using pip:

pip install pyserial pyqt6 pyqtgraph

Wokwi Project: You need access to our shared Wokwi project link.

Wokwi Project Files
The Wokwi simulation contains the following critical files:

sketch.cpp: The main C++ firmware that runs on the Pico.

mpu6050.c & mpu6050.h: A simple library to read data from the MPU6050 sensor.

diagram.json: Defines the hardware components (Pico, MPU6050) and their connections.

CMakeLists.txt: The build configuration file that tells Wokwi how to compile the C++ code and link the necessary libraries.

Running the Full Simulation
Follow these steps in order:

Start the Wokwi Simulation: Open the Wokwi project and press the "Start Simulation" button. The code will compile, and you should see the Pico start running.

Identify the COM Port: The Wokwi simulation will connect to your computer over a virtual serial port. The application needs to know which port to listen to. This will be specified in the controller.py file.

Run the Python Desktop App: Navigate to the desktop-app directory in your local project folder and run the main application file from your terminal:

python main_app.py

View the Graph: The Python application window should appear, and you will see a real-time graph plotting the simulated EEG data coming from the MPU6050 in Wokwi.

📂 Project Structure
The repository is organized into two main parts:

.
├── firmware-pico/      # All C/C++ code for the Raspberry Pi Pico
│   ├── sketch.cpp
│   └── CMakeLists.txt
│
└── desktop-app/        # Python application for data visualization
    ├── model.py        # Handles serial communication
    ├── view.py         # Defines the GUI layout (PyQt6)
    ├── controller.py   # Connects the model and view (app logic)
    └── main_app.py     # Entry point to run the application
